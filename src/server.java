import java.io.*;         // For input/output handling (reading/writing)
import java.net.*;        // For networking (ServerSocket, Socket)

// Our main class â€” this is the entry point of the app
public class server {
    public static void main(String[] args) throws IOException {

        // Create a ServerSocket that listens on port 8080 (standard HTTP port)
        ServerSocket serverSocket = new ServerSocket(8080);

        // Let us know the server is up and running
        System.out.println("Server started on http://localhost:8080");

        // Infinite loop â€” keeps the server running to accept multiple requests
        while (true) {

            // Wait for a client (like a web browser) to connect
            Socket clientSocket = serverSocket.accept();

            // Create a reader to get the request from the browser
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(clientSocket.getInputStream())
            );

            // Create a writer to send back a response to the browser
            PrintWriter out = new PrintWriter(clientSocket.getOutputStream());

            // Read the first line of the HTTP request (usually looks like "GET / HTTP/1.1")
            String requestLine = in.readLine();
            System.out.println("Request: " + requestLine); // Log it

            // Send a standard HTTP 200 OK header back to the browser
            out.println("HTTP/1.1 200 OK");
            out.println("Content-Type: text/html"); // Tell the browser this is HTML
            out.println(""); // Blank line = end of headers

            // Send the actual HTML content (the response body)
            out.println("<html><head><style>");
            out.println("body {");
            out.println("  font-family: 'Segoe UI', sans-serif;");
            out.println("  background-color: #121212;");
            out.println("  color: #f5f5f5;");
            out.println("  margin: 0;");
            out.println("  padding: 0;");
            out.println("  text-align: center;");
            out.println("}");

            out.println("nav {");
            out.println("  background-color: #1f1f1f;");
            out.println("  padding: 15px;");
            out.println("}");

            out.println("nav a {");
            out.println("  margin: 0 15px;");
            out.println("  color: #00ffcc;");
            out.println("  text-decoration: none;");
            out.println("  font-weight: bold;");
            out.println("  transition: color 0.3s ease;");
            out.println("}");

            out.println("nav a:hover {");
            out.println("  color: #ff00cc;");
            out.println("}");

            out.println(".container {");
            out.println("  max-width: 800px;");
            out.println("  margin: 80px auto;");
            out.println("  padding: 20px;");
            out.println("  background-color: #1e1e1e;");
            out.println("  border-radius: 12px;");
            out.println("  box-shadow: 0 0 20px rgba(0, 255, 204, 0.2);");
            out.println("}");

            out.println("footer {");
            out.println("  margin-top: 50px;");
            out.println("  font-size: 12px;");
            out.println("  color: #777;");
            out.println("}");
            out.println("</style></head><body>");

            out.println("<nav>");
            out.println("<a href='/'>Home</a>");
            out.println("<a href='/about'>About</a>");
            out.println("<a href='/projects'>Projects</a>");
            out.println("<a href='/contact'>Contact</a>");
            out.println("</nav>");

            out.println("<div class='container'>");
            out.println("<h1>ðŸš€ Welcome to Davidâ€™s Java Server Site</h1>");
            out.println("<p>Youâ€™re looking at a live webpage generated by raw Java code.<br> No frameworks. No shortcuts. Just pure skill.</p>");
            out.println("</div>");

            out.println("<footer>");
            out.println("<p>&copy; 2025 David M. | Powered by Java + Passion</p>");
            out.println("</footer>");

            out.println("</body></html>");


            // Make sure everything gets sent
            out.flush();

            // Close the connection to that browser â€” it's done
            clientSocket.close();
        }
    }
}
